[{"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\reportWebVitals.ts":"1","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\index.tsx":"2","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\index.tsx":"3","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\Home\\index.tsx":"4","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\graphql\\generated\\index.tsx":"5","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\Register\\index.tsx":"6","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\InputField\\index.tsx":"7","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\toErrorMap.ts":"8","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\Login\\index.tsx":"9","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\CreateTeam\\index.tsx":"10","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\authentication.ts":"11","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\util\\ProtectedRoute\\index.tsx":"12","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\Navbar\\index.tsx":"13","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\FullPage\\index.tsx":"14","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\index.tsx":"15","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\index.tsx":"16","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Input\\index.tsx":"17","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\AppLayout\\index.tsx":"18","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Teams\\index.tsx":"19","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\index.tsx":"20","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\index.tsx":"21","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\ChannelItem\\index.tsx":"22","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\UserItem\\index.tsx":"23","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\ListItem\\index.tsx":"24","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Teams\\components\\TeamItem\\index.tsx":"25","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Header\\index.tsx":"26","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\containers\\Sidebar\\index.tsx":"27","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\AddChannelModal\\index.tsx":"28","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\InvitePoepleModal\\index.tsx":"29","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\index.ts":"30","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\index.tsx":"31","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\accessToken.ts":"32","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\index.ts":"33","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Teams\\components\\index.ts":"34","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\containers\\index.ts":"35","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\DirectMessageModal\\index.tsx":"36","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\context\\session.ts":"37","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\index.ts":"38","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\FileUpload\\index.tsx":"39","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\Message\\index.tsx":"40","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\index.ts":"41","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\index.ts":"42","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\CircleIconButton\\index.tsx":"43","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\MessageItem\\index.tsx":"44","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\context\\SessionContext.tsx":"45","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\getBase64Value.ts":"46","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\util\\PublicRoute\\index.tsx":"47","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\CircleButton\\index.tsx":"48","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\AutoResizeTextarea\\index.tsx":"49","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\Message\\components\\TextMessage\\index.tsx":"50","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\components\\Input\\index.tsx":"51","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\components\\index.ts":"52","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\components\\TypingIndicator\\index.tsx":"53"},{"size":431,"mtime":1608898048476,"results":"54","hashOfConfig":"55"},{"size":2179,"mtime":1611937454439,"results":"56","hashOfConfig":"55"},{"size":5111,"mtime":1611937381473,"results":"57","hashOfConfig":"55"},{"size":203,"mtime":1611937395488,"results":"58","hashOfConfig":"55"},{"size":51565,"mtime":1611937287074,"results":"59","hashOfConfig":"60"},{"size":2948,"mtime":1609172166922,"results":"61","hashOfConfig":"55"},{"size":958,"mtime":1608913265686,"results":"62","hashOfConfig":"55"},{"size":292,"mtime":1608904492685,"results":"63","hashOfConfig":"55"},{"size":3947,"mtime":1611329017327,"results":"64","hashOfConfig":"55"},{"size":3579,"mtime":1611937570990,"results":"65","hashOfConfig":"55"},{"size":240,"mtime":1608920765385,"results":"66","hashOfConfig":"55"},{"size":1084,"mtime":1611663531746,"results":"67","hashOfConfig":"55"},{"size":1519,"mtime":1609001573752,"results":"68","hashOfConfig":"55"},{"size":413,"mtime":1611871467708,"results":"69","hashOfConfig":"55"},{"size":4751,"mtime":1611844332829,"results":"70","hashOfConfig":"55"},{"size":9079,"mtime":1611930613839,"results":"71","hashOfConfig":"55"},{"size":180,"mtime":1609002125260,"results":"72","hashOfConfig":"55"},{"size":330,"mtime":1609090979782,"results":"73","hashOfConfig":"55"},{"size":2232,"mtime":1611937445761,"results":"74","hashOfConfig":"55"},{"size":4945,"mtime":1611937414610,"results":"75","hashOfConfig":"55"},{"size":4279,"mtime":1611937578784,"results":"76","hashOfConfig":"55"},{"size":1430,"mtime":1611937401634,"results":"77","hashOfConfig":"55"},{"size":1597,"mtime":1611937408870,"results":"78","hashOfConfig":"55"},{"size":407,"mtime":1609023936752,"results":"79","hashOfConfig":"55"},{"size":1672,"mtime":1611937426516,"results":"80","hashOfConfig":"55"},{"size":1146,"mtime":1611845002078,"results":"81","hashOfConfig":"55"},{"size":3732,"mtime":1611937477809,"results":"82","hashOfConfig":"55"},{"size":10923,"mtime":1611937339274,"results":"83","hashOfConfig":"55"},{"size":2768,"mtime":1611655763135,"results":"84","hashOfConfig":"55"},{"size":61,"mtime":1609003529763,"results":"85","hashOfConfig":"55"},{"size":5249,"mtime":1611935202569,"results":"86","hashOfConfig":"55"},{"size":199,"mtime":1608898580850,"results":"87","hashOfConfig":"55"},{"size":301,"mtime":1611682299823,"results":"88","hashOfConfig":"55"},{"size":29,"mtime":1609004646311,"results":"89","hashOfConfig":"55"},{"size":28,"mtime":1609010816707,"results":"90","hashOfConfig":"55"},{"size":8854,"mtime":1611918513144,"results":"91","hashOfConfig":"55"},{"size":149,"mtime":1608925472611,"results":"92","hashOfConfig":"55"},{"size":30,"mtime":1609170976229,"results":"93","hashOfConfig":"55"},{"size":1188,"mtime":1611937360739,"results":"94","hashOfConfig":"55"},{"size":1261,"mtime":1611767304180,"results":"95","hashOfConfig":"55"},{"size":198,"mtime":1610030900875,"results":"96","hashOfConfig":"55"},{"size":60,"mtime":1611604129572,"results":"97","hashOfConfig":"55"},{"size":1003,"mtime":1611937355070,"results":"98","hashOfConfig":"55"},{"size":4203,"mtime":1611786037772,"results":"99","hashOfConfig":"55"},{"size":762,"mtime":1611937366045,"results":"100","hashOfConfig":"55"},{"size":254,"mtime":1610283744254,"results":"101","hashOfConfig":"55"},{"size":777,"mtime":1610459196685,"results":"102","hashOfConfig":"55"},{"size":858,"mtime":1611845015295,"results":"103","hashOfConfig":"55"},{"size":918,"mtime":1611937347936,"results":"104","hashOfConfig":"55"},{"size":5539,"mtime":1611933013775,"results":"105","hashOfConfig":"55"},{"size":6945,"mtime":1611932972917,"results":"106","hashOfConfig":"55"},{"size":26,"mtime":1611851313664,"results":"107","hashOfConfig":"55"},{"size":2049,"mtime":1611930635934,"results":"108","hashOfConfig":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1xrzby7",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xe9jvj",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\reportWebVitals.ts",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\Home\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\graphql\\generated\\index.tsx",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\Register\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\InputField\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\toErrorMap.ts",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\Login\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\CreateTeam\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\authentication.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\util\\ProtectedRoute\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\Navbar\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\FullPage\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Input\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\AppLayout\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Teams\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\ChannelItem\\index.tsx",["258"],"import { BoxProps, Flex, Text } from '@chakra-ui/react';\r\nimport React, { FC } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { RegularChannelFragment } from '../../../../../../graphql/generated';\r\nimport { ListItem } from '../ListItem';\r\n\r\ninterface Props {\r\n  channel: RegularChannelFragment;\r\n  pl?: BoxProps['pl'];\r\n  setSelectedChannel: (selectedChannel: RegularChannelFragment) => void;\r\n  selectedChannel: RegularChannelFragment | null | undefined;\r\n  selectedTeamId: string | undefined;\r\n  closeDrawer?: () => void;\r\n}\r\n\r\nexport const ChannelItem: FC<Props> = ({\r\n  channel,\r\n  pl,\r\n  setSelectedChannel,\r\n  selectedChannel,\r\n  selectedTeamId,\r\n  closeDrawer,\r\n}) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<{ teamId: string }>();\r\n  if (!channel) return null;\r\n  const handleSelectChannel = () => {\r\n    if (closeDrawer) closeDrawer();\r\n    setSelectedChannel(channel);\r\n    history.push(`/view-team/${selectedTeamId}/${channel.id}`);\r\n  };\r\n  return (\r\n    <ListItem\r\n      pl={pl}\r\n      onClick={handleSelectChannel}\r\n      backgroundColor={\r\n        selectedChannel?.id === channel.id ? '#243855' : undefined\r\n      }\r\n    >\r\n      <Flex>\r\n        <Text as=\"span\" fontWeight=\"bold\" mr={4}>\r\n          #\r\n        </Text>\r\n        <Text isTruncated textOverflow=\"ellipsis\">\r\n          {channel.name}\r\n        </Text>\r\n      </Flex>\r\n    </ListItem>\r\n  );\r\n};\r\n","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\UserItem\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\ListItem\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Teams\\components\\TeamItem\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Header\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\containers\\Sidebar\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\AddChannelModal\\index.tsx",["259"],"import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Switch,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport { Form, Formik } from 'formik';\r\nimport React, { FC } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Select from 'react-select';\r\nimport {\r\n  Channel,\r\n  MeDocument,\r\n  MemberMultiselect,\r\n  MeQuery,\r\n  useCreateChannelMutation,\r\n  useGetTeamMembersQuery,\r\n} from '../../graphql/generated';\r\nimport { toErrorMap } from '../../utils/toErrorMap';\r\nimport InputField from '../InputField';\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  selectedTeamId: string;\r\n  setSelectedChannel: (\r\n    selectedChannel: {\r\n      __typename?: 'Channel' | undefined;\r\n    } & Pick<Channel, 'id' | 'name' | 'public'>\r\n  ) => void;\r\n  currentUserId: string;\r\n}\r\n\r\nexport const AddChannelModal: FC<Props> = ({\r\n  isOpen,\r\n  onClose,\r\n  selectedTeamId,\r\n  setSelectedChannel,\r\n  currentUserId,\r\n}) => {\r\n  if (!selectedTeamId) return null;\r\n  const [createChannel] = useCreateChannelMutation();\r\n  const { data, loading } = useGetTeamMembersQuery({\r\n    skip: !isOpen,\r\n    variables: { teamId: selectedTeamId },\r\n    fetchPolicy: 'network-only',\r\n  });\r\n  const history = useHistory();\r\n  if (!selectedTeamId || loading || !data) return null;\r\n  return (\r\n    <>\r\n      <Modal\r\n        returnFocusOnClose={false}\r\n        onClose={onClose}\r\n        isOpen={isOpen}\r\n        isCentered\r\n        motionPreset=\"slideInBottom\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create a team channel</ModalHeader>\r\n          <ModalBody>\r\n            <Formik\r\n              initialValues={{\r\n                name: '',\r\n                teamId: selectedTeamId,\r\n                public: true,\r\n                users: [] as MemberMultiselect[],\r\n              }}\r\n              onSubmit={async (values, { setErrors }) => {\r\n                try {\r\n                  const response = await createChannel({\r\n                    variables: values,\r\n                    // Update cache on channel created\r\n                    update: (store, { data }) => {\r\n                      // If channel could not be created\r\n                      if (!data?.createChannel || !data.createChannel.ok)\r\n                        return null;\r\n\r\n                      // Fetch old data from cache\r\n                      const oldData = store.readQuery<MeQuery>({\r\n                        query: MeDocument,\r\n                      });\r\n\r\n                      // Check if old data exists\r\n                      if (oldData?.me.teams && data.createChannel.channel) {\r\n                        // Write new channel data to cache\r\n                        store.writeQuery<MeQuery>({\r\n                          query: MeDocument,\r\n                          data: {\r\n                            /**\r\n                             * map over team array.\r\n                             * if the selected team is in the array and the channel was created,\r\n                             * add for that team's channels list the newly created channel.\r\n                             */\r\n                            me: {\r\n                              ...oldData.me,\r\n                              teams: oldData.me.teams.map((team, i) => {\r\n                                if (\r\n                                  team.id === selectedTeamId &&\r\n                                  data.createChannel.channel &&\r\n                                  oldData.me.teams &&\r\n                                  oldData.me.teams[i]\r\n                                ) {\r\n                                  return {\r\n                                    ...team,\r\n                                    channels: [\r\n                                      ...(oldData.me.teams[i].channels || []),\r\n                                      data.createChannel.channel,\r\n                                    ],\r\n                                  };\r\n                                }\r\n                                return team;\r\n                              }),\r\n                            },\r\n                          },\r\n                        });\r\n                      }\r\n                    },\r\n                  });\r\n                  if (response.data?.createChannel.errors) {\r\n                    setErrors(toErrorMap(response.data?.createChannel.errors));\r\n                  } else if (response.data?.createChannel.channel) {\r\n                    // Close madal after cache was updated\r\n                    history.push(\r\n                      `/view-team/${selectedTeamId}/${response.data.createChannel.channel?.id}`\r\n                    );\r\n                    setSelectedChannel(response.data.createChannel.channel);\r\n                    onClose();\r\n                  }\r\n                } catch (e) {\r\n                  console.log(e.message);\r\n                }\r\n              }}\r\n            >\r\n              {({\r\n                handleBlur,\r\n                handleChange,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values,\r\n                errors,\r\n              }) => (\r\n                <Form>\r\n                  <Heading size=\"lg\" fontWeight=\"light\" mb={3}></Heading>\r\n                  <Box my={3}>\r\n                    <InputField\r\n                      autoFocus\r\n                      onBlur={handleBlur}\r\n                      name=\"name\"\r\n                      placeholder=\"Enter channel name...\"\r\n                      label=\"Channel Name\"\r\n                      type=\"text\"\r\n                      autoComplete=\"false\"\r\n                    />\r\n                  </Box>\r\n\r\n                  <FormControl display=\"flex\" alignItems=\"center\">\r\n                    <FormLabel htmlFor=\"public-channel\" mb=\"0\">\r\n                      Make channel private?\r\n                    </FormLabel>\r\n                    <Switch\r\n                      onBlur={handleBlur}\r\n                      id=\"public-channel\"\r\n                      checked={!values.public}\r\n                      onChange={(e) => {\r\n                        setFieldValue('public', !e.target.checked);\r\n                        if (!e.target.checked)\r\n                          setFieldValue('users', [] as MemberMultiselect[]);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  {!values.public && (\r\n                    <>\r\n                      <FormLabel mt={2}>Add private chat members</FormLabel>\r\n                      <Select\r\n                        styles={{\r\n                          control: (base, state) => ({\r\n                            ...base,\r\n                            borderColor: state.isFocused\r\n                              ? '#3182ce'\r\n                              : '#E2E8F0',\r\n                            boxShadow: state.isFocused\r\n                              ? '0 0 0 1px #3182ce'\r\n                              : undefined,\r\n                            '&:hover': {\r\n                              borderColor: state.isFocused\r\n                                ? '#3182ce'\r\n                                : '#CBD5E0',\r\n                            },\r\n                          }),\r\n                          option: (base, state) => ({\r\n                            ...base,\r\n                            backgroundColor:\r\n                              state.isFocused && state.isSelected\r\n                                ? '#3182ce'\r\n                                : state.isFocused\r\n                                ? '#a7c6e4'\r\n                                : state.isSelected\r\n                                ? '#3182ce'\r\n                                : undefined,\r\n                            color:\r\n                              state.isFocused || state.isSelected\r\n                                ? 'white'\r\n                                : undefined,\r\n                          }),\r\n                          multiValueLabel: (base) => ({\r\n                            ...base,\r\n                            backgroundColor: '#3182ce',\r\n                            color: 'white',\r\n                            borderRadius: 0,\r\n                          }),\r\n                          multiValueRemove: (base) => ({\r\n                            ...base,\r\n                            backgroundColor: '#3182ce',\r\n                            color: 'white',\r\n                            borderRadius: 0,\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.1s ease',\r\n                            '&:hover': {\r\n                              background: '#c5245a',\r\n                              color: 'white',\r\n                            },\r\n                          }),\r\n                        }}\r\n                        onChange={(newArr) => {\r\n                          setFieldValue('users', newArr);\r\n                        }}\r\n                        defaultValue={[]}\r\n                        isMulti\r\n                        name=\"members\"\r\n                        placeholder=\"Select members...\"\r\n                        value={values.users}\r\n                        options={data?.getTeamMembers\r\n                          .filter((member) => member.id !== currentUserId)\r\n                          .map((member) => ({\r\n                            value: member.id,\r\n                            label: member.username,\r\n                          }))}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                      />\r\n                      <Text fontSize=\"sm\" color=\"gray.500\">\r\n                        You will be invited to this channel automatically\r\n                      </Text>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* General Errors Start*/}\r\n                  {errors.teamId && (\r\n                    <Alert status=\"error\">\r\n                      <AlertIcon />\r\n                      <AlertTitle mr={2}>Error!</AlertTitle>\r\n                      <AlertDescription>{errors.teamId}</AlertDescription>\r\n                    </Alert>\r\n                  )}\r\n                  {/* General Errors End*/}\r\n\r\n                  <Button\r\n                    disabled={isSubmitting}\r\n                    isLoading={isSubmitting}\r\n                    mt={3}\r\n                    type=\"submit\"\r\n                    colorScheme=\"blue\"\r\n                    w=\"100%\"\r\n                  >\r\n                    Create Channel\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\InvitePoepleModal\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Channels\\components\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\accessToken.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\index.ts",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Teams\\components\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\containers\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\DirectMessageModal\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\context\\session.ts",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\FileUpload\\index.tsx",["260"],"import { Box, BoxProps } from '@chakra-ui/react';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n  RegularChannelFragment,\r\n  useUploadFileMutation,\r\n} from '../../graphql/generated';\r\n\r\ninterface Props extends BoxProps {\r\n  noClick?: boolean;\r\n  teamId: string;\r\n  channelId: string;\r\n  to: RegularChannelFragment;\r\n}\r\n\r\nexport const FileUpload: FC<Props> = ({\r\n  children,\r\n  height,\r\n  noClick = false,\r\n  teamId,\r\n  channelId,\r\n  to,\r\n}) => {\r\n  const [uploadFile] = useUploadFileMutation();\r\n\r\n  const onDrop = useCallback(\r\n    async ([f]) => {\r\n      const file: any = new Blob([f], { type: f.type });\r\n      file.name = f.name;\r\n      if (file) {\r\n        try {\r\n          await uploadFile({ variables: { file, teamId, channelId } });\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    },\r\n    [to]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    noClick,\r\n  });\r\n  return (\r\n    <Box height={height} {...getRootProps()} _focus={{ outline: 'none' }}>\r\n      <div>\r\n        <input {...getInputProps()} />\r\n        {children}\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n","I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\Message\\index.tsx",[],[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\CircleIconButton\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\MessageItem\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\context\\SessionContext.tsx",["261"],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\utils\\getBase64Value.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\util\\PublicRoute\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\CircleButton\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\Components\\AutoResizeTextarea\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\Messages\\components\\Message\\components\\TextMessage\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\components\\Input\\index.tsx",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\components\\index.ts",[],"I:\\dev\\fullstack\\slack-graphql-test\\client\\src\\routes\\ViewTeam\\components\\ChatWindow\\components\\ChatInput\\components\\TypingIndicator\\index.tsx",[],{"ruleId":"262","severity":1,"message":"263","line":690,"column":8,"nodeType":"264","messageId":"265","endLine":695,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":745,"column":8,"nodeType":"264","messageId":"265","endLine":750,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":807,"column":8,"nodeType":"264","messageId":"265","endLine":812,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":856,"column":8,"nodeType":"264","messageId":"265","endLine":861,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":906,"column":8,"nodeType":"264","messageId":"265","endLine":911,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":963,"column":8,"nodeType":"264","messageId":"265","endLine":968,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1020,"column":8,"nodeType":"264","messageId":"265","endLine":1025,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1063,"column":8,"nodeType":"264","messageId":"265","endLine":1068,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1115,"column":8,"nodeType":"264","messageId":"265","endLine":1120,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1164,"column":8,"nodeType":"264","messageId":"265","endLine":1169,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1212,"column":8,"nodeType":"264","messageId":"265","endLine":1217,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1255,"column":8,"nodeType":"264","messageId":"265","endLine":1257,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1263,"column":8,"nodeType":"264","messageId":"265","endLine":1268,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1307,"column":8,"nodeType":"264","messageId":"265","endLine":1312,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1318,"column":8,"nodeType":"264","messageId":"265","endLine":1323,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1367,"column":8,"nodeType":"264","messageId":"265","endLine":1369,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1372,"column":8,"nodeType":"264","messageId":"265","endLine":1374,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1412,"column":8,"nodeType":"264","messageId":"265","endLine":1414,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1420,"column":8,"nodeType":"264","messageId":"265","endLine":1425,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1464,"column":8,"nodeType":"264","messageId":"265","endLine":1469,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1475,"column":8,"nodeType":"264","messageId":"265","endLine":1480,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1519,"column":8,"nodeType":"264","messageId":"265","endLine":1524,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1530,"column":8,"nodeType":"264","messageId":"265","endLine":1535,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1576,"column":8,"nodeType":"264","messageId":"265","endLine":1581,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1616,"column":8,"nodeType":"264","messageId":"265","endLine":1621,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1656,"column":8,"nodeType":"264","messageId":"265","endLine":1661,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1697,"column":8,"nodeType":"264","messageId":"265","endLine":1702,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":1737,"column":8,"nodeType":"264","messageId":"265","endLine":1742,"endColumn":2},{"ruleId":"266","severity":1,"message":"267","line":25,"column":9,"nodeType":"268","messageId":"269","endLine":25,"endColumn":14},{"ruleId":"266","severity":1,"message":"270","line":151,"column":17,"nodeType":"268","messageId":"269","endLine":151,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":28,"column":19,"nodeType":"273","messageId":"274","endLine":28,"endColumn":22,"suggestions":"275"},{"ruleId":"262","severity":1,"message":"263","line":8,"column":34,"nodeType":"276","messageId":"265","endLine":8,"endColumn":39},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-unused-vars","'match' is assigned a value but never used.","Identifier","unusedVar","'handleChange' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["277","278"],"ArrowFunctionExpression",{"messageId":"279","fix":"280","desc":"281"},{"messageId":"282","fix":"283","desc":"284"},"suggestUnknown",{"range":"285","text":"286"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"285","text":"287"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[630,633],"unknown","never"]